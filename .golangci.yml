#
# Golang CI pipeline configuration
#
# To execute linters in local the ./scripts/lint.sh script can be used.

linters:
  disable-all: true

  # Run golangci-lint linters to see
  enable:
    - asasalint # check for pass []any as any in variadic func(...any) [fast: false, auto-fix: false]
    - asciicheck # Simple linter to check that your code does not contain non-ASCII identifiers [fast: true, auto-fix: false]
    - bidichk # Checks for dangerous unicode character sequences [fast: true, auto-fix: false]
    - decorder # check declaration order and count of types, constants, variables and functions [fast: true, auto-fix: false]
    - dogsled # Checks assignments with too many blank identifiers (e.g. x, _, _, _, := f()) [fast: true, auto-fix: false]
    - dupword # checks for duplicate words in the source code [fast: true, auto-fix: true]
    - durationcheck # check for two durations multiplied together [fast: false, auto-fix: false]
    - gci # Gci controls golang package import order and makes it always deterministic. [fast: true, auto-fix: false]
    - gocheckcompilerdirectives # Checks that go compiler directive comments (//go:) are valid. [fast: true, auto-fix: false]
    - gochecksumtype # Run exhaustiveness checks on Go "sum types" [fast: false, auto-fix: false]
    - gofmt # Gofmt checks whether code was gofmt-ed. By default this tool runs with -s option to check for code simplification [fast: true, auto-fix: true]
    - gofumpt # Gofumpt checks whether code was gofumpt-ed. [fast: true, auto-fix: true]
    - goimports # In addition to fixing imports, goimports also formats your code in the same style as gofmt. [fast: true, auto-fix: true]
    - mirror # reports wrong mirror patterns of bytes/strings usage [fast: false, auto-fix: false]
    - unused #(megacheck): Checks Go code for unused constants, variables, functions and types [fast: false, auto-fix: false]
    - usestdlibvars # A linter that detect the possibility to use variables/constants from the Go standard library. [fast: true, auto-fix: false]
    - wastedassign # wastedassign finds wasted assignment statements. [fast: false, auto-fix: false]
    - whitespace # Tool for detection of leading and trailing whitespace [fast: true, auto-fix: true]
    - zerologlint # Detects the wrong usage of `zerolog` that a user forgets to dispatch with `Send` or `Msg` [fast: false, auto-fix: false]

issues:
  max-issues-per-linter: 0
  max-same-issues: 0

  exclude-rules:
    - path: _test\.go
      linters:
        - stylecheck
        - gosec
